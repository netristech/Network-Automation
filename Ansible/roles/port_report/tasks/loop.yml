---
- name: Set Defaults
  vars:
    interface: ''
    desc: ''
    stat: ''
    ext_stat: ''
    speed_dup: ''
    type: ''
    vlan: ''
    mac: ''
    vendor: ''
    ip: ''
    poe: ''
    
- name: Set Interface
  vars:
    interface: "{{ item.key }}"
  when: item.key is defined
  
- name: Set Description
  vars:
    desc: "{{ item.value.description }}"
  when: item.value.description is defined
  
- name: Set Status
  vars:
    stat: "{{ item.value.state }}"
  when: item.value.state is defined
  
- name: Set Status 2
  vars:
    stat: "{{ item.value.operstatus }}"
  when: item.value.operstatus is defined
  
- name: Get Extended Status
  cli_command:
    command: "show interface {{ item.key }} | inc {{ item.key }}"
  register: stat_line
  when: item.key is search("Gig.*|gig.*|Fast.*|fast.*|Eth.*|eth.*")
  
- name: Set Extended Status
  vars:
    ext_stat: "{{ stat_line.stdout.split()[-1] }}"
  when: stat_line.stdout is defined
  
- name: Get Speed and Duplex
  cli_command:
    command: "show interface {{ item.key }} | inc -duplex"
  register: speed_dup_line
  when: item.key is search("Gig.*|gig.*|Fast.*|fast.*|Eth.*|eth.*")
  
- name: Set Speed and Duplex
  vars:
    speed_dup: "{{ speed_dup_line.stdout.split(',')[1] }} {{ speed_dup_line.stdout.split(',')[0] }}"
  when: 
    - speed_dup_line.stdout is defined
    - speed_dup_line.stdout != ''

- name: Get Interface Configuration
  cli_command:
    command: "show running-config interface {{ item.key }}"
  register: int_config
  when: item.key is search("Gig.*|gig.*|Fast.*|fast.*|Eth.*|eth.*")
  
- name: Set Port Type
  vars:
    type: "{{ int_config.stdout | regex_search('\\b(?:switchport mode [A-Za-z]{5,6})\\b') | regex_replace('switchport mode ') }}"
  when: int_config.stdout is defined
  
- name: Set VLAN ID
  vars:
    vlan: "{{ int_config.stdout | regex_search('\\b(?:access vlan [0-9]{1,4})\\b') | regex_replace('access vlan ') }}"
  when: int_config.stdout is defined
    
- name: Set VLAN ID - Fallback
  vars:
    vlan: 1
  when:
    - vlan == ''
    - type == 'access'

- name: Get MAC from table
  cli_command:
    command: "show mac address interf {{ item.key }}"
  register: mac_list
  when: item.key is search("Gig.*|gig.*|Fast.*|fast.*|Eth.*|eth.*")
  
- name: Set MAC address
  vars:
    mac: "{{ mac_list.stdout | regex_search('\\b(?:[0-9a-f]{4}\\.){2}[0-9a-f]{4}\\b') }}"
  when: mac_list.stdout is defined
  
- name: Get OUI from MAC
  vars:
    oui: "{{ mac.split('.') | join() | regex_replace('^([0-9a-f]{6})[0-9a-f]{6}$', '\\1')  | upper }}"
  when: mac != ''
  
- name: Get Vendor
  vars:
    vendor_line: "{{ oui_file | regex_search( oui | string + '.*') }}"
  when: oui is defined

- name: Set Vendor
  vars:
    vendor: "{{ vendor_line.split()[3:] | join(' ') | regex_replace(',') }}"
  when: 
    - vendor_line is defined
    - vendor_line != ''

- name: Get IP from ARP
  cli_command:
    command: "show ip arp | inc {{ mac }}"
  register: arp_list
  when: mac != ''
  
- name: Set IP address
  vars:
    ip: "{{ arp_list.stdout | regex_search('\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b') }}"
  when: arp_list.stdout is defined
  
- name: Set IP address - fallback
  vars:
    ip: "{{ item.value.ipv4.address }}"
  when: item.value.ipv4.address is defined
  
- name: Set IP address - fallback 2
  vars:
    ip: "{{ item.value.ipv4[0].address }}"
  when: item.value.ipv4[0].address is defined
  
- name: Get PoE Status
  cli_command:
    command: "show power inline {{ item.key }} detail | inc status"
  register: poe_stat
  when: item.key is search("^Gi.*|^gi.*|^Fa.*|^fa.*|^Eth.*|^eth.*")
  
- name: Set PoE Status
  vars:
    poe: "{{ poe_stat.stdout.split(':')[-1] }}"
  when: poe_stat.stdout is defined
  
- name: Write Line to CSV
  delegate_to: localhost
  lineinfile:
    path: "{{ csv_file }}"
    line: "{{ interface }},{{ desc }},{{ stat }},{{ ext_stat }},{{ speed_dup }},{{ type }},{{ vlan }},{{ mac }},{{ vendor }},{{ ip }},{{ poe }}"
